# Docker-specific configuration
spring.application.name=ChessMystic
server.port=8081

# Use container service names for inter-container communication
spring.data.mongodb.uri=mongodb://mongodb:27017/chessmystic
spring.data.mongodb.database=chessmystic

# Keycloak configuration with service names
keycloak.server-url=http://keycloak:8080
keycloak.realm=chess
keycloak.client-id=chessid
keycloak.client-secret=AEm91LQVgWiA8R4ElOdvL9z3SyIDOo0l

spring.security.oauth2.client.registration.keycloak.client-id=chessid
spring.security.oauth2.client.registration.keycloak.client-secret=AEm91LQVgWiA8R4ElOdvL9z3SyIDOo0l
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak:8080/realms/chess
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/chess/protocol/openid-connect/certs

# Disable H2 in Docker environment
spring.h2.console.enabled=false
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration

# JPA configuration for MongoDB
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
spring.data.mongodb.auto-index-creation=true

# CORS - allow frontend access
spring.mvc.cors.allowed-origins=http://localhost:3000,http://localhost:8080,http://keycloak:8080
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allow-credentials=true

# Other configurations (same as main application.properties)
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true

# Logging
logging.level.tn.esprit.spring.connectn=DEBUG
logging.level.org.springframework.security=DEBUG