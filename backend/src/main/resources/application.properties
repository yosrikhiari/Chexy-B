spring.application.name=ChessMystic
# Server port (different from your frontend)
server.port=8081

# ===============================
# H2 DATABASE CONFIGURATION (Development - Commented out for Docker)
# ===============================
# In-memory database (data lost on restart)
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

# ===============================
# MONGODB CONFIGURATION
# ===============================
spring.data.mongodb.uri=mongodb://mongo_user:mongo_password@mongodb:27017/chessmystic?authSource=admin
spring.data.mongodb.database=chessmystic
spring.data.mongodb.connection-timeout=30000
spring.data.mongodb.socket-timeout=30000
spring.data.mongodb.server-selection-timeout=30000

# ===============================
# CORS CONFIGURATION
# ===============================
spring.mvc.cors.allowed-origins=http://localhost:3000,http://localhost:8080,http://keycloak:8080
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.max-age=3600

# ===============================
# JPA / HIBERNATE CONFIGURATION (Disabled for MongoDB)
# ===============================
# Since you're using MongoDB, disable JPA/Hibernate
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

# ===============================
# KEYCLOAK OAUTH2 CONFIGURATION
# ===============================
spring.security.oauth2.client.registration.keycloak.client-id=chessid
spring.security.oauth2.client.registration.keycloak.client-secret=AEm91LQVgWiA8R4ElOdvL9z3SyIDOo0l
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Keycloak provider configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak:8080/realms/chess
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://keycloak:8080/realms/chess/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://keycloak:8080/realms/chess/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://keycloak:8080/realms/chess/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# Resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/chess
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/chess/protocol/openid-connect/certs

# ===============================
# KEYCLOAK ADMIN CLIENT CONFIGURATION
# ===============================
keycloak.server-url=http://keycloak:8080
keycloak.realm=chess
keycloak.client-id=chessid
keycloak.client-secret=AEm91LQVgWiA8R4ElOdvL9z3SyIDOo0l
keycloak.admin-username=chessnewadmin
keycloak.admin-password=admin

# ===============================
# GOOGLE OAUTH2 CONFIGURATION (OPTIONAL)
# ===============================
google.client-id=957968052620-91n5o5bojqnf8mad9ghmhllhjl4r658m.apps.googleusercontent.com

# ===============================
# SWAGGER CONFIGURATION
# ===============================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.persistAuthorization=true

# ===============================
# FILE UPLOAD CONFIGURATION
# ===============================
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# ===============================
# ACTUATOR CONFIGURATION
# ===============================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.defaults.enabled=true
management.health.mail.enabled=false

# ===============================
# LOGGING CONFIGURATION
# ===============================
logging.level.tn.esprit.spring.connectn=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.keycloak=DEBUG
# Reduced verbose logging for production
logging.level.org.springframework.transaction=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type=INFO

# ===============================
# EMAIL CONFIGURATION
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ChessMystic.mail@gmail.com
spring.mail.password="zeltgszvyglastfa"
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.from=ChessMystic.mail@gmail.com

# ===============================
# HUGGINGFACE CONFIGURATION
# ===============================
huggingface.token=${HUGGINGFACE_TOKEN:${HUGGINGFACE_TOKEN}}

# ===============================
# RASA CONFIGURATION
# ===============================
rasa.server.url=http://localhost:5005
rasa.actions.url=http://localhost:5055/webhook

# ===============================
# CONNECTION POOL CONFIGURATION
# ===============================
spring.data.mongodb.auto-index-creation=true